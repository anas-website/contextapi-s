{"version":3,"sources":["component/AddRoom.js","component/Room.js","component/Home.js","component/AddDevice.js","component/Device.js","component/RoomWithDevices.js","component/Heder.js","App.js","serviceWorker.js","index.js"],"names":["AddRoom","props","useState","roomName","setRoomName","RoomIdName","setRoomIdName","roomColor","setRoomColor","className","onChange","e","target","value","name","id","placeholder","maxLength","style","backgroundColor","minWidth","margin","display","borderRadius","paddingRight","paddingLeft","height","type","to","onClick","length","alert","Add","Room","Rooms","border","textDecoration","index","color","cursor","deleteRoom","Home","width","rooms","map","i","key","fontSize","AddDevice","device","setDevice","validNumOfStereo","BoilerInBathroom","validNumOFDevices","roomDevices","ObjWithStereo","find","Device","status","validAndAddDevice","ReRender","btnColor","setBtnColor","background","ChangeBtnColor","indexRoom","deleteDevice","ReRenderApp","RoomWithDevices","btnName","setBtnName","flag","setflag","render","setrender","padding","addDevice","hideAndShowAddDevice","Heder","marginTop","App","setReRender","setRooms","addRoom","RName","RId","RColor","DeleteRoom","tempo","filter","DeviceObj","indexDevice","DevicesObj","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f0a3bd3d.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function AddRoom(props) {\r\n\r\nconst [roomName, setRoomName] = useState('select')\r\nconst [RoomIdName, setRoomIdName] = useState('')\r\nconst [roomColor, setRoomColor] = useState('#f9f0f0')\r\n\r\n    return (\r\n      <div>\r\n        <div className='container '>\r\n          <select\r\n            className='form-control '\r\n            onChange={(e) => {\r\n              setRoomName(e.target.value);\r\n            }}\r\n            name='cars'\r\n            id='cars'\r\n          >\r\n            <option value='select'>Select Room </option>\r\n\r\n            <option value='Bedroom'>Bedroom</option>\r\n            <option value='Bathroom'>Bathroom</option>\r\n            <option value='Kitchen'>Kitchen</option>\r\n          </select>\r\n          <br />\r\n\r\n          <input\r\n            className='form-control'\r\n            placeholder='ID Room'\r\n            maxLength='5'\r\n            onChange={(e) => {\r\n              setRoomIdName(e.target.value);\r\n            }}\r\n          ></input>\r\n          <br />\r\n\r\n          <div style={{ backgroundColor: 'gray', minWidth: '300px', margin: 'auto', display: 'flex', borderRadius: '5px' }}>\r\n            <h4 style={{ paddingRight: '10px', paddingLeft: '10px' }}>Choose Color</h4>\r\n\r\n            <input\r\n              style={{ height: '40px' }}\r\n              onChange={(e) => {\r\n                setRoomColor(e.target.value);\r\n              }}\r\n              type='color'\r\n              value={roomColor}\r\n            ></input>\r\n          </div>\r\n          <br />\r\n\r\n          <Link to='/'>\r\n           \r\n            <button\r\n              className='btn btn-dark'\r\n              onClick={() => {\r\n                //  validation of the length of the room id name\r\n                if (roomName == 'select' || RoomIdName.length < 1) {\r\n                  alert('you did not choose a room or id room! ');\r\n                } else {\r\n                  props.Add(roomName, RoomIdName, roomColor);\r\n                }\r\n              }}\r\n            >\r\n              Add Room\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n}\r\n\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport React from 'react';\r\n\r\nexport default function Room(props) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div style={{ backgroundColor: props.Rooms.roomColor + 'D1', border: 'solid 2px  black ', borderRadius: '10px' }}>\r\n          <Link style={{ textDecoration: 'none' }} to={'/room/' + props.index}>\r\n            <div>\r\n              <h3 style={{ color: 'black' }}>Room {props.index + 1}</h3>\r\n\r\n              <h3 style={{ color: 'black' }}> {props.Rooms.roomName}</h3>\r\n              <h3 style={{ color: 'black' }}>{props.Rooms.RoomIdName}</h3>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <h6\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => {\r\n            props.deleteRoom(props.index);\r\n          }}\r\n        >\r\n          Delete\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Room from './Room';\r\nimport {Link} from 'react-router-dom';\r\nexport default function Home(props) {\r\n \r\n  return (\r\n    <div className=' container col-12' style={{ width: '400px' }}>\r\n      <br />\r\n      <div className='row'>\r\n        {/* Display 'Room' component and pass with it props from the 'App' component */}\r\n        {props.rooms.map((e, i) => {\r\n          return (\r\n            <div key={i} className='col-6' style={{ minWidth: '150px' }}>\r\n              <Room Rooms={e} index={i} deleteRoom={props.deleteRoom} />\r\n              <br />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <Link to='/addroom' style={{ textDecoration: 'none' }}>\r\n        \r\n        <div style={{ margin: 'auto', color: 'white', backgroundColor: 'gray', width: '100px', height: '70px', borderRadius: '50px', border: 'solid 2px black' }}>\r\n          <h1 style={{ fontSize: '50px', color: 'whit', height: '50px' }}>+</h1>\r\n        </div>\r\n      </Link>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React ,{useState}from 'react'\r\n\r\nexport default function AddDevice(props) {\r\n    const [device,setDevice]= useState('select')\r\n\r\n\r\n let validNumOfStereo=true\r\n  let BoilerInBathroom=true\r\n  let validNumOFDevices=true \r\n// \r\n\r\n\r\n  // Ensure that devices are added to the appropriate rooms\r\n  const validAndAddDevice=()=>{\r\n \r\n                \r\n        \r\n            if(props.Room.roomDevices.length<5||props.Room.roomName=='Bathroom') \r\n            {validNumOFDevices=true}\r\n            else{validNumOFDevices=false}\r\n    \r\n             if( !(props.Room.roomName=='Bathroom')&&device=='Boiler')\r\n             {BoilerInBathroom=false}\r\n             else if( (props.Room.roomName=='Bathroom'&&device=='Boiler'))\r\n             {BoilerInBathroom=true}\r\n             else if (props.Room.roomName=='Bathroom'&&(!(device=='Boiler')))\r\n             {BoilerInBathroom=false}\r\n             else{BoilerInBathroom=true}\r\n           //###\r\n           let ObjWithStereo= props.Room.roomDevices.find( ({ Device }) => Device == 'Stereo')\r\n     \r\n            if((ObjWithStereo)&&device=='Stereo')\r\n            {validNumOfStereo=false \r\n                  }\r\n            else{validNumOfStereo=true}\r\n          \r\n            \r\n           //####\r\n            if(validNumOFDevices&& validNumOfStereo&&BoilerInBathroom &&(!(device=='select'))){   \r\n                props.Add(props.index,{Device:device,status:'red'})\r\n        \r\n        }\r\n             else{ alert('Some input error')}\r\n    \r\n     }\r\n\r\n//############################################\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <select\r\n            className='form-control'\r\n            onChange={(e) => {\r\n              setDevice(e.target.value);\r\n            }}\r\n            name='devices'\r\n          >\r\n            <option value='select'>select</option>\r\n            <option value='Air-Conditioner'>Air-Conditioner</option>\r\n            <option value='Lamp'>Lamp</option>\r\n            <option value='Boiler'>Boiler</option>\r\n            <option value='Stereo'>Stereo</option>\r\n          </select>\r\n\r\n          {/* //################ */}\r\n\r\n          <button\r\n            className='btn btn-dark mt-4'\r\n            onClick={() => {\r\n              validAndAddDevice();\r\n              props.ReRender();\r\n            }}\r\n          >\r\n            Add Device\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","\r\nimport React, {useState} from 'react'\r\nfunction Device(props) {\r\n    \r\n    const [btnColor, setBtnColor] = useState( props.Room.roomDevices[props.index].status)\r\n \r\n           \r\n    return (\r\n      <div>\r\n        {/* When the button is clicked, the color of it is changed : */}\r\n        <div>\r\n         \r\n          <button\r\n            className='btn btn-success'\r\n            style={{ background: btnColor }}\r\n            onClick={() => {\r\n              if (props.Room.roomDevices[props.index].status == 'red') {\r\n                props.ChangeBtnColor(props.indexRoom, props.index, 'green');\r\n\r\n                setBtnColor(props.Room.roomDevices[props.index].status);\r\n              } else if (props.Room.roomDevices[props.index].status == 'green') {\r\n                props.ChangeBtnColor(props.indexRoom, props.index, 'red');\r\n              }\r\n              setBtnColor(props.Room.roomDevices[props.index].status);\r\n\r\n              // button delete a device and re render the component:\r\n            }}\r\n          >\r\n            {props.Room.roomDevices[props.index].Device}\r\n          </button>\r\n          <div>\r\n              <h6 style={{ color: 'red', cursor: 'pointer' }}\r\n                onClick={() => {\r\n                props.deleteDevice(props.indexRoom, props.index);\r\n                props.ReRenderApp();\r\n              }}>Delete</h6>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n}\r\nexport default Device\r\n","import React,{useState} from 'react'\r\nimport AddDevice from './AddDevice';\r\nimport Device from './Device'\r\n\r\n\r\n\r\n\r\nexport default function RoomWithDevices(props) {\r\n\r\n\r\n    const[btnName,setBtnName]= useState('Add Device')\r\n    const [flag, setflag] = useState(false)\r\n    const[render,setrender]=useState(false)\r\n//Function change button name\r\n const changeFlag=()=>{\r\n    setflag(!flag)\r\n  if(btnName=='Add Device'){ setBtnName('Cancel')}\r\n  else{setBtnName('Add Device')}\r\n   }\r\n// Function Re render \"RoomWithDevices\" component\r\n  const ReRender=()=>{setrender(!render)}\r\n\r\n  //Function display and hide   \"AddDevice\" component \r\n    const hideAndShowAddDevice=()=>{\r\n\r\n              if(flag){ \r\n            \r\n                 return(<AddDevice Room={props.Room}  Add={props.addDevice}index={props.index} ReRender={ReRender}  />)}  \r\n               \r\n            }\r\n         \r\n    return (\r\n      <div>\r\n        <br />\r\n        <div className='row'>\r\n          <div className='col-6'>\r\n            <h6> Room Name: {props.Room.roomName}</h6>\r\n            <h6> Room ID: {props.Room.RoomIdName}</h6>\r\n          </div>\r\n          <div className='col-6'>\r\n            {/* Display \"Device\" component */}\r\n            {props.Room.roomDevices.map((e, i) => {\r\n              return <Device key={i} Room={props.Room} index={i} indexRoom={props.index} ChangeBtnColor={props.ChangeBtnColor} deleteDevice={props.deleteDevice}  ReRenderApp={props.ReRenderApp} />;\r\n            })}\r\n          </div>\r\n\r\n          {/* When the button is clicked, the button name is changed to \"Cancel/Add Device\" and \"AddDevice\" component is Displayed  or hidden */}\r\n          <div className='container' style={{ backgroundColor: \"gray\", padding: \"20px\" }}>\r\n            {\" \"}\r\n            <button\r\n              className='btn btn-dark mb-4 '\r\n              onClick={() => {\r\n                changeFlag();\r\n              }}\r\n            >\r\n              {btnName}\r\n            </button>\r\n            {hideAndShowAddDevice()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Heder() {\r\n    return (\r\n      <div>\r\n        <div style={{ backgroundColor: 'rgba(175, 171, 171, 0.972)' }} className='row '>\r\n          <div style={{ marginTop: '10px' }} className='col-4'>\r\n           \r\n            <Link to='/'> Home </Link>\r\n          </div>\r\n\r\n          <div className='col-4'>\r\n           \r\n            <h2>Smart House</h2>\r\n          </div>\r\n          <div className='col-4'> </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport AddRoom from './component/AddRoom';\nimport Home from './component/Home';\nimport  RoomWithDevices from './component/RoomWithDevices'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Heder from './component/Heder'\n\nfunction App() {\n  const [ReRender,setReRender]=useState(false)\n\n   //all the data of the application:\n  const [rooms, setRooms] = useState([\n    { roomName: 'Kitchen',RoomIdName:'aaa', roomColor: '#f9f0f0', roomDevices:[{Device:'Lamp',status:'red'},{Device:'Lamp',status:'red'}] },\n    { roomName: 'Bedroom',RoomIdName:'bbb', roomColor: '#f9f0f0', roomDevices:[{Device:'Lamp',status:'red'},{Device:'Lamp',status:'red'}]},\n  ]);\n//###########################\n \n// function add room:\nconst addRoom=( RName,RId, RColor)=>{\n\n  setRooms([...rooms,{roomName: RName,RoomIdName:RId,roomColor:RColor,roomDevices:[]}])\n}\n//###########################\n// function delete room:\n   const DeleteRoom=(i)=>{\nlet tempo=rooms.filter((e,index)=>index!=i)\nsetRooms(tempo)\n   }\n//##########################\n\n // function add device:\nconst AddDevice=(i,DeviceObj)=>{\n  let tempo=rooms\n  tempo[i].roomDevices=[...tempo[i].roomDevices,DeviceObj]\n  \n  \n  \n  setRooms(tempo)\n}\n//#########################\n\n// function change the button color (green/red):\nconst ChangeBtnColor=(indexRoom,indexDevice,btnColor)=>{\n  let tempo=rooms\n  tempo[indexRoom].roomDevices[indexDevice].status=btnColor\n  setRooms(tempo)\n}\n//#######################\n\n//function delete device:\n    const deleteDevice=(indexRoom,indexDevice)=>{\n      let DevicesObj=rooms[indexRoom].roomDevices.filter((e,index)=>index!=indexDevice)\n     let tempo=rooms\n     tempo[indexRoom].roomDevices=DevicesObj    \n     setRooms(tempo)\n    }\n//######################\n// function Re render \"App\" component\nconst ReRenderApp=()=>{ setReRender(!ReRender) }\n   \n  return (\n    <div className='App'>\n      <Router>\n        <Heder/>\n\n        <Switch>\n          <Route\n            exact\n            path='/'\n            component={() => {\n              return <Home rooms={rooms} deleteRoom={DeleteRoom} />;\n            }}\n          />\n\n          {/* Duplicate each \"RoomWithDevices\" component with different route according to the index of the rooms and pass with it  props..  */}\n          {rooms.map((e, i) => {\n            return (\n              <Route\n                key={i}\n                exact\n                path={'/room/' + i}\n                component={() => {\n                  return <RoomWithDevices index={i} Room={e} addDevice={AddDevice} ChangeBtnColor={ChangeBtnColor} deleteDevice={deleteDevice}  ReRenderApp={ ReRenderApp} />;\n                }}\n              />\n            );\n          })}\n\n          {/* Route for component \"AddRoom\" with props the function addRoom */}\n          <Route\n            exact\n            path='/addroom'\n            component={() => {\n              return <AddRoom Add={addRoom} />;\n            }}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}